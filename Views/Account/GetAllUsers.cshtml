@using Microsoft.AspNetCore.Identity
@using Pharmacy_v2.DTOs
@model List<NonAdminUsersDTO>
@inject UserManager<ApplicationUser> _userManeger;
@{
   
    Layout = "_Layout_admin";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Non-Admin Users Table</title>
    <style>


        .table-container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 600px;
            margin: 0 auto;
        }

        h2 {
            margin-bottom: 10px;
            color: #333;
        }

        .info-text {
            margin-bottom: 20px;
            font-size: 14px;
            color: #666;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

        th, td {
            padding: 12px;
            border: 1px solid #ddd;
            text-align: center;
        }

        th {
            background-color: #f2f2f2;
            color: #555;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        td {
            background-color: #fff;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="table-container">
        <h2>Non-Admin Users</h2>
        <p class="info-text">All records here are not admins</p>
        <table id="usersTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Age</th>
                    <th colspan="2">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.Id</td>
                        <td>@user.Name</td>
                        <td>@user.Age</td>
                        <td><a asp-action="ActivateNewAdmin" asp-route-id="@user.Id" class="btn btn-outline-danger">Activate</a></td>
                        @{
                            var USER = await _userManeger.FindByIdAsync(@user.Id);

                            if (!_userManeger.IsInRoleAsync(USER, "Locked").Result)
                            {
                                <td><a asp-action="LockUser" asp-route-id="@user.Id" class="btn btn-outline-primary">Lock</a></td>
                            }
                            else
                            {
                                <td><a asp-action="UnLockUser" asp-route-id="@user.Id" class="btn btn-outline-primary">UnLock</a></td>

                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <script>
        // If you need any additional JavaScript functionality, you can add it here.
        // Razor is rendering the table dynamically with the model.
    </script>
</body>
</html>

    <script>
        function populateTable() {
            const tableBody = document.querySelector("#usersTable tbody");

            nonAdminUsers.forEach(user => {
                const row = document.createElement("tr");

                const idCell = document.createElement("td");
                idCell.textContent = user.Id;
                row.appendChild(idCell);

                const nameCell = document.createElement("td");
                nameCell.textContent = user.Name;
                row.appendChild(nameCell);

                const ageCell = document.createElement("td");
                ageCell.textContent = user.Age;
                row.appendChild(ageCell);

                tableBody.appendChild(row);
            });
        }

        // Call the populateTable function when the page loads
        window.onload = populateTable;
    </script>

